/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.marquis.wordcounter;

import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marquis
 */
public class startFrame extends javax.swing.JFrame {

    private final String tester = "Scotty is a man and Scotty likes bacon. I also like bacon. Everyone likes bacon.";    
    
    // I Want to exclude numbers and include apostrophes.
    
    /** Creates new form startFrame */
    public startFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        topTable = new javax.swing.JTable();
        estAvgSyl = new javax.swing.JLabel();
        estTotSyl = new javax.swing.JLabel();
        uniqueWrds = new javax.swing.JLabel();
        totWrds = new javax.swing.JLabel();
        avgWrdLng = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Total Words:");

        jLabel2.setText("Unique Words:");

        jLabel3.setText("Average Word Length:");

        jLabel4.setText("Est. Total Syllables:");

        jLabel5.setText("Est. Average Syllables:");

        jLabel6.setText("Top Words:");

        topTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Word", "Syllables", "Count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(topTable);

        estAvgSyl.setText("estAvgSyl");

        estTotSyl.setText("estTotSyl");

        uniqueWrds.setText("uniqueWrds");

        totWrds.setText("totWrds");

        avgWrdLng.setText("avgWrdLng");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(avgWrdLng)
                            .addComponent(totWrds)
                            .addComponent(estTotSyl)
                            .addComponent(estAvgSyl)
                            .addComponent(uniqueWrds))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(totWrds))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(uniqueWrds))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(avgWrdLng))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(estTotSyl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(estAvgSyl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    public void runFrame(String docUrl) throws Exception {
        odtImport mprt = new odtImport(docUrl);
        wordList lst = new wordList(mprt.fullString());
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                startFrame GUI = new startFrame();
                GUI.computeVariablesForGUI(lst);
                GUI.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                GUI.setVisible(true);
            }
        });
        
    }
    
    public static void main(String args[]) throws Exception {
        String docUrl = "/home/marquis/Documents/Poetry/Workshop/But it really was a dream/But it really was a dream 7 rhyme.odt";
        odtImport finalTest = new odtImport(docUrl);
        
        wordList tstr = new wordList(finalTest.fullString());
        
        /*ArrayList<word> tst = new ArrayList<>();
        tst.add(new word("beta"));
        tst.add(new word("kilt", 5));
        tst.add(new word("listen", 2));
        tst.add(new word("fahrenheit"));
        tst.add(new word("charlie", 6));
        tst.add(new word("delta", 3));
        tst.add(new word("hotel", 7));
        tst.add(new word("nautical", 4));
        tst.add(new word("item", 2));
        tst.add(new word("jerry", 3));
        tst.add(new word("alpha"));
        tst.add(new word("moment", 10));
        tst.add(new word("omniscient"));
        tst.add(new word("powerful"));
        tst.add(new word("epsilon"));
        tst.add(new word("grand"));
        wordList tstr = new wordList(tst);
        System.out.println(tstr.listToString());
        tstr.mergeSort(0, tst.size()-1, false);
        System.out.println(tstr.listToString());*/
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(startFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(startFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(startFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(startFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                startFrame GUI = new startFrame();
                GUI.computeVariablesForGUI(tstr);
                GUI.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avgWrdLng;
    private javax.swing.JLabel estAvgSyl;
    private javax.swing.JLabel estTotSyl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable topTable;
    private javax.swing.JLabel totWrds;
    private javax.swing.JLabel uniqueWrds;
    // End of variables declaration//GEN-END:variables

    public void computeVariablesForGUI(wordList wrdLst){
        int totalWords = 0;//, totalSyllables = 0;
        double averageLength = 0, totalSyllables = 0;
        int uniqueWords = wrdLst.getWordList().size();
        for (word wrd : wrdLst.getWordList()){
            totalWords += wrd.getFrequency();
            averageLength += (wrd.getLength()*wrd.getFrequency());
            totalSyllables += (wrd.getSyllables()*wrd.getFrequency());
        }//end for loop
        averageLength = averageLength / totalWords;
        double averageSyllables = totalSyllables / totalWords;
        
        DecimalFormat hundreths = new DecimalFormat("#.##");
        DecimalFormat ones = new DecimalFormat("#");
        
        totWrds.setText((new Integer(totalWords)).toString());
        uniqueWrds.setText((new Integer(uniqueWords)).toString());
        avgWrdLng.setText(hundreths.format(averageLength));//round double to nearest hundreth
        estTotSyl.setText(ones.format(totalSyllables));
        estAvgSyl.setText(hundreths.format(averageSyllables));//round double to nearest hundreth
        
        ArrayList<word> tt = wrdLst.topTenFrequency();
        for (int i = 0; i < tt.size(); i++) {
            word e = tt.get(i);
            topTable.setValueAt(e.getLetters(), i, 0);
            topTable.setValueAt(e.getSyllables(), i, 1);
            topTable.setValueAt(e.getFrequency(), i, 2);
        }
    }//end computeVariables for GUI
    
}
